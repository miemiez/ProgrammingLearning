一.非空约束
    作用：限定某个字段/某列的值不允许为空
    关键字：NOT null
    注意：非空约束，只能针对某个列去设置，不能组合设置


二.唯一性约束
    作用：用来限制某个字段/某列的值不能重复
    关键字：UNIQUE
    创建方式：
        单一的唯一索引
            创建方式一：
            CREATE TABLE test02(
                id INT UNIQUE, #列级约束
                last_name VARCHAR(15),
                email VARCHAR(25),
                salary DECIMAL(10,2)

                #表级约束，创建约束并起名
                CONSTRAINT uk_test2_email UNIQUE(email)
            );

            创建方式二：
            ALTER TABLE test02
            ADD CONSTRAINT uk_test2_sal UNIQUE(salary);

            创建方式三：
            ALTER TABLE test02
            MODIFY last_name VARCHAR(15) UNIQUE;

        复合的唯一性约束：
            创建方式：
            CREATE TABLE USER(
                id INT,
                `name` VARCAHR(15),
                `password` VARCHAR(25),

                #表级约束，创建约束
                CONSTRAINT uk_user_name-pwd UNIQUE(NAME,PASSWORD)
            );
        
    删除唯一性约束：
        添加唯一性约束的列上也会自动创建唯一索引
        删除唯一约束只能通过删除唯一索引的方式删除
        删除时需要指定唯一索引名，唯一索引名就和唯一约束名一样
        如果删除唯一约束时未指定名称，如果是单列，就默认和列名相同；如果是组合列，那么默认和（）中排在第一个的列名相同，也可以自定义唯一性约束名。
        ALTER TABLE <表名> DROP INDEX <唯一约束名>;


三.主键约束
    作用：用来唯一标识表中的一行记录
    关键字：PRIMARY
    注意：
        ①一个表中最多只能有一个主键约束，非空且唯一，且不能为NULL
        ②MySQL的主键名总是PRIMARY，就算自己命名了主键约束名也没用
        ③当创建主键约束时，系统默认会在所在列或列组合上建立对应的主键索引，如果删除主键约束对应的索引就会自动删除
        ④需要注意一点：不要修改主键字段的值，因为主键是数据记录的唯一标识，如果修改了主键的值，就可能会破坏数据的完整性。
        ⑤复合主键，不允许其中任意一个值为NULL


四.自增 AUTO_INCREMENT
    作用：某个字段的值自增
    关键字：auto_increment
    特点和要求：
        ①一个表最多只能有一个自增长列
        ②当需要产生唯一标识符或顺序值时，可设置自增长
        ③自增长列约束的列必须是键列（主键列，唯一键列）
        ④自增约束的列的数据类型必须是整数类型
        ⑤如果自增列指定了0和null，会在当前最大值的基础上自增；如果自增列手动指定了具体值，直接赋值为具体值
    例：
        CREATE TABLE test(
            id INT PRIMARY KEY AUTO_INCREMENT,
            last_name VARCAHR(15)
        );

        INSERT INTO test(last_name)
        VALUES('TOM');


五.外键约束
    作用：限定某个表的某个字段的引用完整性
        主表（父表）：被引用的表，被参考的表
        从表（子表）：引用别人的表，参考别人的表
    例如：
        ①员工表的员工所在部门这个字段的值要参考部门表，部门表是主表，员工表是从表
        ②学生表，课程表，选课表：选课表的学生和课程要分别参考学生表和课程表，学生表和课程表是主表，选课表是从表
    特点：
        ①从表的外键列，必须引用/参考主表的主键或唯一约束的列，因为被依赖/被参考的值必须是唯一的
        ②在创建外键约束时，如果不给外键约束命名，【默认名不是列名，而是自动产生一个外键名】，也可以指定外键约束名
        ③创建表时就指定外键约束的话，先创建主表，再创建从表
        ④删除表时，先删除从表（或先删除外键约束），再删除主表
        ⑤当主表的记录被从表参照时，主表的记录将不允许删除，如果要删除数据，需要先删除从表中依赖该记录的数据，然后才可以删除主表的数据
        ⑥在从表中指定外键约束，并且一个表可以建立多个外键约束
        ⑦从表的外键列与主表被参照的列的名字可以不相同，但是数据类型必须一样，逻辑意义一致。如果类型不一样，创建子表时，就会出现错误。
        ⑧【当创建外键约束时，系统默认会在所在的列上建立对应的普通索引】，但是索引名是列名，而不是外键的约束名。
        ⑨删除外键约束后，必须手动删除对应的索引
    创建例：
        主表：
        CREATE TABLE dept1(
            dept_id INT PRIMARY KEY AUTO_INCREMENT,
            dept_name VARCHAR(15)
        );
        从表：
        CREATE TABLE emp1(
            emp_id INT PRIMARY KEY AUTO_INCREMENT,
            emp_name VARCHAR(15),
            department_id INT,

            #表级约束
            CONSTRAINT fk_emp1_dept_id FOREIGN KEY(department_id) REFERENCES dept1(dept_id)
        );
    注意：
        外键与级联（cascade）更新适用于　单机低并发，不适合　分布式，高并发集群，级联更新是强阻塞，
        存在数据库更新风暴的风险，外键影响数据库的插入速度。
        正常开发的时候，都是在应用层面进行外键约束的实现


六．检查约束
    CREATE TABLE test(
        id INT,
        last_name VARCHAR(15),
        salary DECIMAL(10,2) CHECK(salary > 2000)
    );

七．DEFAULT约束
    CREATE TABLE test(
        id INT,
        last_name VARCAHR(15),
        salary DECIMAL(10,2) DEFAULT 2000
    );
    在ALTER TABLE删除约束
    ALTER TABLE test
    MODIFY salary DECIMAL(8,2);