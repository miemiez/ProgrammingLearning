/*Currying是一种函数转换技术，它将一个接收多个参数的函数转换为一系列只接收一个参数的函数。
在Currying中，原始函数的每个参数都会被转换为一个独立的函数，这些函数接收一个参数，并返回一个新的函数。
这些新函数可以继续接收下一个参数，并返回另一个新函数，以此类推。最后，当所有参数都被传递时，将执行原始函数并返回结果。
Currying使函数具有部分应用的能力，允许我们使用部分参数来创建新的函数。这样，我们可以在后续调用中只提供剩余的参数，
以实现更加灵活和可复用的函数定义。*/

//一个简单的Curring示例：
function add(x) {
    return function(y) {
      return x + y;
    }
  }
  
  const add5 = add(5); // 创建一个接收一个参数的新函数
  console.log(add5(3)); // 输出 8

  //Currying可以带来更好的代码组织、可读性和复用性，特别是在需要多次使用相同的函数但只改变部分参数的情况下。