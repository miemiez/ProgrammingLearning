一.设置背景图片：
    使用该函数设置的背景图像url()可能并不总是以我们想要的特定方式填充背景。
例如，如果背景图像小于容器区域，则默认情况下图像将以平铺模式重复。有各种属性
允许我们以我们想要的方式设置背景图像，例如background-repeat、background-size
和background-position。


二.计算值：
    calc()函数可用于对混合单位（rem、vw、px等）执行数学运算。在进行加法（+）
或减法（-）时，两个被运算的数必须有指定的单位。除法 ( /) 要求除数（第二个操作数）
是无单位数，乘法 ( *) 要求其中一个操作数是无单位数。请记住，该calc()函数需要在运
算符和表达式中的数字之间留有空格。该函数还可以用作另一个函数中属性或参数的多个值之一。


三.min() 和 max()：
    如果我们想要创建响应式元素，min()和max()函数是设置特定案例设计约束的绝佳解决方案。
该min()函数将从一系列值中选择最小值并将其设置为关联属性的值。该max()函数将从一系列值中
选择最大值，该值将用作关联属性的值。


四.clamp()：
    有时我们会希望将元素设计为动态缩放，但又要限制在上限和下限之间。该clamp()功能是实现
这一目标的理想选择！
    该clamp()函数采用特定顺序的三个参数：
    .main-text{
        font-size: clamp(12px, 1.5vw, 48px);
    }
        （1）.第一个参数指定最小值。如果作为第二个参数给出的首选值小于此值，则将使用最小值。
    在上面的代码片段中，12px作为属性的最小值给出font-size。
        （2）.第二个参数指定首选值。只要该值大于第一个参数的值（下限）且小于第三个参数的值
    （上限），就会使用该值。在上面的代码片段中，1.5vw作为属性的首选值给出font-size。
        （3）.第三个参数指定最大值。此值是属性将设置为的最大值。在上面的代码片段中，48px作为
    属性的最大值给出font-size。


五.颜色函数：
    主要的颜色函数有：
        （1）.使用标准 RGB（红色、绿色和蓝色）模型定义颜色的rgb()函数。
        （2）.除了rgb(),还定义了一个 alpha 通道来指定颜色的不透明度级别外，它与函数rgba()类似。
        （3）.hsl()此函数使用色调、饱和度和亮度定义颜色。
        （4）.hsla()同样，此函数类似于 函数hsl()，只是它还定义了一个指定颜色不透明度级别的 alpha 通道。


六.filter()：
    filter 是一个 CSS 属性，用于在元素上应用图形效果（如模糊、颜色偏移、对比度等）。
它允许通过改变元素的视觉呈现来提高用户体验和视觉吸引力。
    以下是一些常用的 filter 效果：
        （1）blur - 对元素进行高斯模糊。
        （2）brightness - 调整元素的亮度。
        （3）contrast - 调整元素的对比度。
        （4）grayscale - 将元素转换为灰度图像。
        （5）hue-rotate - 旋转元素的色相。
        （6）invert - 反转元素的颜色。
        （7）opacity - 调整元素的不透明度。
        （8）saturate - 调整元素的饱和度。
        （9）sepia - 将元素转换为深棕色色调。
        （10）drop-shadow - 在元素后面添加一个阴影。
        要使用 filter 属性，需要指定要应用的效果和效果的值。例如，要将元素模糊 5 像素，
        可以这样写：
            filter: blur(5px);
        filter 属性可以与其他 CSS 属性一起使用，例如 transform，以创建更复杂的视觉效果。


七.transform():
    transform 用于将元素进行变换，可以改变元素的大小、形状、位置等。
    transform 属性包括以下一些常见的子属性：
        (1)translate()：移动元素的位置。
        (2)rotate()：旋转元素。
        (3)scale()：缩放元素。
        (4)skew()：斜切元素。
        (5)matrix()：定义一个 2D 转换，使用六个值的矩阵。
    通过这些子属性的组合，我们可以实现很多的效果。例如，使用 translate() 和 rotate() 可以使
    一个元素围绕另一个元素旋转；使用 scale() 可以使一个元素缩放到原来的大小的一半等等。

    transition 属性允许元素在发生变化时平滑地过渡到另一个状态，比如在鼠标悬停在一个链接上时改
变链接的颜色、大小或位置。你可以使用 transition 属性指定元素的哪些属性需要进行过渡，以及过渡
所需的时间、延迟和速度曲线等。
    transform 属性允许你对元素进行变换，比如旋转、缩放、平移、倾斜等。它可以对元素进行 2D 或 
3D 变换，以实现各种动画效果。
    这两个属性经常一起使用，transform 属性用于指定元素的变换效果，transition 属性用于平滑地
过渡这些变换。比如，当你将鼠标悬停在一个图像上时，可以使用 transform 属性将其放大，然后使用 
transition 属性在一定时间内平滑地过渡到放大的状态。