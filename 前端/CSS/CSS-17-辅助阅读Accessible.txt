一：
a[href^="http"]:after {
    content: " (" attr(href) ")";
  }

这段 CSS 代码是一个伪类选择器规则，它会在具有以 "http" 开头的 href 属性的 <a> 元素后面插入内容。
具体解释如下：
    a[href^="http"] 是一个属性选择器，选择所有具有以 "http" 开头的 href 属性的 <a> 元素。
    :after 是一个伪元素选择器，表示在选中的元素的内容后面插入伪元素。
    content 属性定义了插入的内容，这里使用了 attr() 函数来获取选中元素的 href 属性值，并在内容中展示出来。
    最后的括号和引号用于将 href 属性值包裹起来，以增加可读性。
    举例来说，如果有一个 <a> 元素的 href 属性值为 "http://example.com"，那么应用这段 CSS 代码后，该元素的内容后面会显示为 " (http://example.com)"。
    这个代码片段通常用于在链接后面添加一些额外的信息，比如显示链接的 URL。
    在CSS中，^ 是一个属性选择器中的符号，表示选择属性值以指定字符串开头的元素。
    例如，a[href^="https://"] 表示选择所有具有以 "https://" 开头的 href 属性的 <a> 元素。
    这种选择器可以用于针对特定属性值的元素进行样式设置或选择。


在可访问性方面需要考虑很多因素。让我们花点时间回顾一下关键的考虑因素：

    （1）.文本的大小应至少为1.5 18px，段落的大小应line-height至少为 1.5，以增加内容的可读性。
    （2）.对于标准字体大小，元素之间的颜色对比度至少应为 4.5:1。
    （3）.交互式元素应该具有表示交互性的视觉外观，例如带下划线的链接和指针光标。
    （4）.应通过元素为缩写内容提供附加内容<abbr>。
    （5）.向用户隐藏元素时，使用visibility: hidden;或display: none;向辅助用户和非辅助用户隐藏内容。
    （6）.视觉显示应反映 HTML 中所呈现元素的结构，以便为辅助和非辅助用户提供导航连贯性。
    （7）.设计用于不同媒体（例如印刷品）的页面。
    

二：
设置ARIA可阅读：
  在html中设置标签属性aria-hidden="true"
设置部分visual用户以及屏幕阅读器可阅读
  在css中设置display: none;
设置屏幕阅读器以及大部分用户都不可读：
  visibility: hidden;


三：
在CSS中，attr()函数用于获取元素的属性值，并将其应用于样式中。它可以用于伪元素的内容、元素的样式属性值等方面。
例如，假设我们有一个具有data-title属性的元素：

<div data-title="Hello, World!"></div>
我们可以使用attr()函数将该属性值应用于伪元素的内容：

div::before {
  content: attr(data-title);
}
这将在该元素的前面生成一个伪元素，并将其内容设置为"Hello, World!"，因为我们使用attr(data-title)获取了data-title属性的值。
attr()函数还可以在其他一些CSS属性中使用，例如content、counter-reset、counter-increment等，以根据元素的属性值动态设置样式。


四：
ch 是 CSS 中的一个相对单位，表示当前使用的字体的宽度。具体而言，它表示字符 "0"（零）的宽度。
使用 ch 单位可以用于根据字体宽度进行相对尺寸的设置。例如，如果你想让一个元素的宽度等于 10 个字符的宽度，可以将宽度设置为 10ch。
需要注意的是，ch 单位的兼容性可能有所限制，特别是在旧版本的浏览器中。在使用 ch 单位时，最好进行测试和兼容性检查，以确保在目标浏览器中得到期望的效果。