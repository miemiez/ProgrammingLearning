package Day38Reflect4;

public class 类加载器说明 {
	/*
	 * 1.什么是类加载器？
	 *     专门负责加载类的命令/工具
	 *     ClassLoader
	 * 
	 * 2.JDK中自带了三个类的加载器
	 *     启动类加载器：rt.jar
	 *     扩展类加载器：ext/*.jar
	 *     应用类加载器：classpath
	 *     
	 * 3.假设有这样一段代码：
	 *     String s = "abc";
	 *     
	 *     代码在开始执行之前，会将所需要类全部加载到JVM当中。
	 *     通过类加载器加载，看到以上代码类加载器会找到String.class文件，
	 *     找到后就加载。
	 *     加载步骤：
	 *         （一）首先通过“启动类加载器”加载，
	 *             启动类加载器专门加载：jre\lib\rt.jar文件。
	 *             rt.jar文件中都是JDK最核心的类库
	 *         （二）如果通过“如果通过启动类加载器”加载不到的时候，会通过“扩展类加载器”加载。
	 *             注意：扩展类加载器专门加载：jre\lib\ext\*.jar文件
	 *         （三）如果“扩展类加载器”没有加载到，那就会通过“应用类加载器”加载。
	 *             注意：应用类加载器专门加载：classpath中的jar包（class文件）。
	 * 
	 * 4.java中为了保证类加载的安全，使用了双亲委派机制。
	 *     优先从启动类加载器中加载，这个称为“父”，
	 *     父无法加载到，再从扩展类加载器中加载，这个称为“母”。
	 *     双亲委派。如果都加载不到，才会考虑从应用类加载器中加载。
	 *     直到加载到为止。
	 */
}
